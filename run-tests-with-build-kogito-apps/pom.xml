<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>run-tests-with-build</artifactId>
    <groupId>org.kie</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>run-tests-with-build-kogito-apps</artifactId>

  <properties>
    <!-- There are some java classes under src/main/java used during test runtime -->
    <!-- We can not skip src/main/java module compilation -->
    <maven.main.skip>false</maven.main.skip>

    <!-- Fail build if there is any issue in tests. This is passed to maven-invoker-plugin -->
    <maven.test.failure.ignore>false</maven.test.failure.ignore>
    <!-- override from parent, no productized profile for now -->
    <maven.modules.resolution.reactor.filtering></maven.modules.resolution.reactor.filtering>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.kie.kogito</groupId>
                  <artifactId>kogito-apps</artifactId>
                  <version>${kogito.download.build.version}</version>
                  <classifier>project-sources</classifier>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${sources.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Invoking groovy script that dynamically decides if project should be included in build or not -->
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>resolve-includes</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-invoker-plugin</artifactId>
        <configuration>
          <!-- kogito-apps tests were not designed to run in parallel -->
          <parallelThreads>1</parallelThreads>
          <!--
          script deciding if included project is:
            executed (either script missing or returning true)
              or
            skipped (when returns false or throws error) -->
          <selectorScript>${maven.modules.resolution.selector.script.name}</selectorScript>
          <pomIncludes>
            <!-- includes everything, filtering is done in resolve-includes.groovy script
            which adds invoker-run.groovy script containing 'return false' near each pom.xml
            that should be excluded.-->
            <pomInclude>**/pom.xml</pomInclude>
          </pomIncludes>
          <pomExcludes>
            <!-- Excludes work still as expected. -->
          </pomExcludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-invoker-plugin</artifactId>
            <configuration>
              <profiles>
                <profile>native</profile>
              </profiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
